pipeline {
agent any

environment {
DOCKER_IMAGE = "weather-service:latest"
}

tools {
maven 'Maven 3.8.1' // Use Jenkins installed Maven tool
jdk 'JDK 17' // Use Jenkins installed JDK 17
}

stages {
stage('Checkout') {
steps {
echo "Cloning source code..."
checkout scm
}
}

stage('Build & Test') {
steps {
echo "Building and running tests..."
sh 'mvn clean install'
}
}

stage('Docker Build') {
steps {
echo "Building Docker image..."
sh 'docker build -t $DOCKER_IMAGE .'
}
}

stage('Archive Artifact') {
steps {
archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
}
}

stage('Publish Docker (Optional)') {
when {
expression { returnparams.PUBLISH_DOCKER_IMAGE == true }
}
environment {
DOCKERHUB_USERNAME = credentials('dockerhub-username')
DOCKERHUB_PASSWORD = credentials('dockerhub-password')
}
steps {
script {
docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
sh 'docker tag $DOCKER_IMAGE yourdockerhubusername/weather-service:latest'
sh 'docker push yourdockerhubusername/weather-service:latest'
}
}
}
}
}

post {
success {
echo "? Build completed successfully."
}
failure {
echo "? Build failed."
}
}
}
